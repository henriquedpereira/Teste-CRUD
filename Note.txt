FluentValidation
	validar os modelos 

Testes usando Moq e NUnit

--CRIAR COMPONENTS ANGULAR --------------------------------------------  
ng generate component components/assunto-list --standalone
ng generate component components/assunto-form --standalone
ng generate service services/assunto

ng generate component components/autor-list --standalone
ng generate component components/autor-form --standalone
ng generate service services/autor

ng generate component components/formapag-list --standalone
ng generate component components/formapag-form --standalone
ng generate service services/formapag

ng generate component components/livro-list --standalone
ng generate component components/livro-form --standalone
ng generate service services/livro
--CRIAR BASE DE DADOS --------------------------------------------  
   
--CRIAR BASE DE DADOS --------------------------------------------   
sqllocaldb create "Teste"

(localdb)\Teste
--CRIAR BASE DE DADOS --------------------------------------------  

--CRIACAO DAS TABELAS --------------------------------------------

CREATE TABLE Autor (
    CodAu INT IDENTITY(1,1) NOT NULL,
    Nome NVARCHAR(40)
);

ALTER TABLE Autor ADD CONSTRAINT Autor_PK PRIMARY KEY (CodAu);

CREATE TABLE Livro (
    CodL INT IDENTITY(1,1) NOT NULL,
    Titulo NVARCHAR(40),
    Editora NVARCHAR(40),
    Edicao INT NOT NULL,
    Publicacao NVARCHAR(4)
);

ALTER TABLE Livro ADD CONSTRAINT Livro_PK PRIMARY KEY (CodL);

CREATE TABLE Assunto (
    CodAs INT IDENTITY(1,1) NOT NULL,
    Descricao NVARCHAR(20)
);

ALTER TABLE Assunto ADD CONSTRAINT Assunto_PK PRIMARY KEY (CodAs);

CREATE TABLE FormaPag (
    CodForm INT IDENTITY(1,1) NOT NULL,
    Descricao NVARCHAR(20)
);

ALTER TABLE FormaPag ADD CONSTRAINT FormaPag_PK PRIMARY KEY (CodForm);

CREATE TABLE LivroAutor (
    AutorCodAu INT NOT NULL,
    LivroCodL INT NOT NULL
);

ALTER TABLE LivroAutor
    ADD CONSTRAINT FK_AutorCodAu FOREIGN KEY (AutorCodAu)
        REFERENCES Autor (CodAu);

ALTER TABLE LivroAutor
    ADD CONSTRAINT FK_LivroCodL FOREIGN KEY (LivroCodL)
        REFERENCES Livro (CodL);

CREATE TABLE LivroFormaPag (
    LivroCodL INT NOT NULL,
    FormaPagCodForm INT NOT NULL,
    Valor DECIMAL(10, 4) NOT NULL
);

ALTER TABLE LivroFormaPag
    ADD CONSTRAINT FK_FormaPagCodForm FOREIGN KEY (FormaPagCodForm)
        REFERENCES FormaPag (CodForm);

ALTER TABLE LivroFormaPag
    ADD CONSTRAINT FK_LivroCodLV1 FOREIGN KEY (LivroCodL)
        REFERENCES Livro (CodL);

CREATE TABLE LivroAssunto (
    LivroCodL INT NOT NULL,
    AssuntoCodAs INT NOT NULL
);

ALTER TABLE LivroAssunto
    ADD CONSTRAINT FK_AssuntoCodAs FOREIGN KEY (AssuntoCodAs)
        REFERENCES Assunto (CodAs);

ALTER TABLE LivroAssunto
    ADD CONSTRAINT FK_LivroCodLV2 FOREIGN KEY (LivroCodL)
        REFERENCES Livro (CodL);
		
--CRIACAO DAS TABELAS --------------------------------------------



--CRIADA DA VIEW --------------------------------------------
CREATE VIEW vw_livro AS
SELECT 
    l.CodL,
    l.Titulo,
    l.Editora,
    l.Edicao,
    l.AnoPublicacao,
    STRING_AGG(a.Descricao, ',') AS Assuntos,
    STRING_AGG(au.Nome, ', ') AS Autores,
    STRING_AGG(CONCAT(fp.Descricao, ' (R$', FORMAT(lf.Valor, 'N2'), ')'), ', ') AS FormasPagamento
FROM 
    Livro l
LEFT JOIN 
    LivroAssunto la ON l.CodL = la.LivroCodL
LEFT JOIN 
    Assunto a ON la.AssuntoCodAs = a.CodAs
LEFT JOIN 
    LivroAutor la2 ON l.CodL = la2.LivroCodL
LEFT JOIN 
    Autor au ON la2.AutorCodAu = au.CodAu
LEFT JOIN 
    LivroFormaPag lf ON l.CodL = lf.LivroCodL
LEFT JOIN 
    FormaPag fp ON lf.FormaPagCodForm = fp.CodForm
GROUP BY 
    l.CodL, l.Titulo, l.Editora, l.Edicao, l.AnoPublicacao;
--CRIADA DA VIEW --------------------------------------------